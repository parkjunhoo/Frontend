[CSS]

- Cascading Style Sheets

- 웹 문서를 구성하는 구성요소에 스타일을 적용하거나 레이아웃을 설정하는 일을 당담

- 기존 웹 사이트에 적용된 CSS를 없애는 방법 (개발자 도구에서만 적용)
  documnent.head.parentNode.removeChild(document.head)
  
  *CSS를 사용하는방법
	  선택자{
	  	속성:속성값;
	  	속성:속성값;
	  }
	  선택자 => 태그 , class , id , 가상 클래스 , 가상의 컨텐츠 , 속성 ....
	  HTML 내에서 어떤 컨텐츠에 CSS를 적용할 것인지 정의할 목적
	  
		1) <head>태그 안에 정의하고 사용하는 방법
		  <style>
		    선택자{
		  	속성:속성값;
		  	속성:속성값;
		  	}
		  	...
		  	...
		  </style>
	  
		2) inline 으로 선언하고 사용
	  	- 태그 내부에 style속성에 정의하고 사용
	  	<시작태그 style="속성1:속성값; 속성2:속성값2; ...">내용</종료태그>

		3) 외부 파일로 작성하고 연결해서 사용하는 방법
			<link rel="stylesheet" type="text/css" href="경로">
			---------------------  --------------  ---------
			현재 연결된 문서가			브라우저가 해석		연결할 문서의 path
			어떤것과 연관이 있는지 명시	할 수 있도록
									response 되는
									데이터의 타입을
									정확하게 명시
									mime타입
 
  *CSS의 선택자
  
  	1) 전체선택자
  		* : 모든 요소를 선택
  		
  	2) 태그선택자
  		태그명{
  			속성:속성값;
  		}
  		
  		태그명,태그명2...{
  			...
  		}
	  		
  	3) class선택자
  		.클래스명{
  			속성:속성값;
  		}
  		
  		-정의한 class속성명에 해당하는 요소만 속성을 적용
  		-class속성은 모든 태그에서 정의하고 사용할 수 있는 속성
  		-중복해서 정의가 가능
  		
  	4) id선택자
  		#아이디명{
  			...
  		}
  		
  		- 식별하기 위해 사용하는 선택자
  		- 한 페이지 동일한 id는 정의하지 않는다.
  		- javascript나 jquery에서 많이 사용
  		- 모든 태그에서 사용할 수 있는 속성인 id속성을 정의하고 사용
  		- css에서는 #을 이용해서 정의
  		
  	5) 복합구성 선택자
  	
  	
  		-태그명클래스명
  		
	  		div.test{
	  			
	  		}
	  		=> div태그 중에서 test라는 이름으로 class속성이 정의된 요소를 선택
  		
  		
  		-선택자1 > 선택자2
  			- 선택자1의 자식요소 선택자2를 선택 ( 바로 아래 )
  			
	  		ul > .mycontent{
				 	color: orange;
				 }
				 
			=> mycontent라는 class명으로 정의된 ul의 하위요소를 선택
		
		
		-선택자1 선택자2
			선택자 1의 하위요소인 선택자2를 선택
			띄어쓰기가 구분 기호
			
			div .mycontent{
				
			}
			
			
		선택자1 + 선택자2
			형제요소를 선택하기 위한 방법
			
			.java + li{
				color : red;
			}
			=> java라는 클래스 속성으로 정의된 요소의 다음 형제요소인 li를 선택
			
			
		선택자1 ~ 선택자2
			형제 요소를 선택하기 위한 방법
			선택자1의 다음 형제요소 중 선택자2에 해당하는 
  		
  	6) 가상 선택자
  		-어떤 상태가 발생했을때를 선택자로 활용하는 경우 사용
  		
  		-선택자:상태
  		
  		1.	a:link
  			- a태그에서 링크가 걸려있는 상태
  		
  		
  		2.	a:visited
  			- a태그를 사용하며 링크로 방문을 한 후 상태
  		
  		
  		3. 선택자:hover
  			-마우스 포인터를 올려 놓는 상황
  			-마우스 포인터가 올라가 있는 상태를 선택자로 활용
  			
  			
  		4.	선택자:active
  			-마우스로 요소를 선택하고 있는 동안을 선택자로 활용
  			-마우스 선택을 계속 유지하는 동안을 의미
  			
  		5. 선택자:first-child
  			선택자가 첫번쨰 자식요소이면 선택
  			
  		6. 선택자:last-child
  			선택자가 마지막 자식요소이면 선택
  			
  		7. 선택자:nth-child(n)
  			-n은 0번부터 시작된다 , 요소는 첫번째 요소가 1
  			(선택자:nth-child(2) => 2번째 요소가 선택된다)
  			
  			
	7) 속성 선택자
		태그의 속성을 선택자로 이용할 수 있다.
		
		(선택자)[속성]
		=> 속성을 포함하고 있는 모든 요소를 선택
		
		[속성="값"]
		=> 속성을 포함하고 있는 모든 요소의 속성값이 일치하는 것을 선택
  
  *기본속성
  
  *텍스트관련 속성
  
  *테이블관련 속성
  
  *박스모델
  	-웹 문서를 구성하는 구성요소들은 박스의 형태를 구성하고 원하는 컨텐츠를 박스의 형태로 관리할 수 있다.
  	-웹 문서를 구성하는 구성요소 한개나 여러 개 모두 박스의 형태로 관리한다. 이를 박스모델이라 한다.
  	- width , height , margin , padding, border
  	- box-sizing속성(박스의 너비의 크기를 정하는 기준)
  	* content-box	: 너비의 기준을 잡기 위해 컨텐츠만 고려
  	* border-box	: 콘텐츠와 border까지 고려
  	
  *포지셔닝
  	-css에서 중요한 속성중 하나가 포지셔닝
  	-웹 문서의 레이아웃과 연관이 있는 속성
  	-웹 문서를 구성하는 컨텐츠의 위치를 정하고 배치하는 것이 포지셔닝
  	
  	*포지셔닝의 종류
  		
  		-top,left
  		
  		1) 상대위치
  		2) 절대위치(absolute)
  			-position 속성에 absolute를 정의
  			-문서를 기준으로 위치가 정해지므로 부모의 위치와 상관없다.
  			-상위요소를 기준으로 움직임
  		3)고정위치
  		4)정적위치(static)
  			-position 속성을 설정하지 않았을때 원래 기본 흐름대로 출력
  			위 -> 아래
  			왼 -> 오른쪽으로 배치
  			-좌표 속성(top,left,right,bottom,offset)을 사용할 수 없다.
  			-상위 요소를 기준으로 움직임
  	
  *플로팅
  
  *레이아웃